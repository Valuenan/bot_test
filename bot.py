from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackContext, MessageHandler, Filters

from settings import TOKEN, ORDERS_CHAT_ID

updater = Updater(token=TOKEN, use_context=True)
dispatcher = updater.dispatcher
job_queue = updater.job_queue


def main_keyboard(update: Update, context: CallbackContext):
    """–û—Å–Ω–æ–≤–∞–Ω—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"""
    user = update.message.from_user

    job_queue.run_repeating(notify_assignees, interval=10.0, first=0.0, last=20.0, context=update.effective_chat.id)

    button_column = [['üî•–í–∏–¥–µ–æ', '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', '–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ'], ['–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã', '–û–ø—Ä–æ—Å']]

    main_kb = ReplyKeyboardMarkup([button for button in button_column], resize_keyboard=True)
    text = f'{user.first_name} {user.last_name} –¥–æ–±—Ä—ã–π –¥–µ–Ω—å!!! –≠—Ç–æ –ü–æ–∂–∞—Ä—Å–∫–∏–π –†–æ–º–∞–Ω —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ Alfa Digital Agency'

    keyboard = InlineKeyboardMarkup([[InlineKeyboardButton(text='–°–∫–∞—á–∞—Ç—å $10 –º–ª–Ω.', callback_data='buy')]])
    message = context.bot.send_message(chat_id=update.effective_chat.id, text='–°–¥–µ–ª–∞—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é',
                                       reply_markup=keyboard)
    context.bot.pin_chat_message(chat_id=message.chat_id, message_id=message.message_id)

    context.bot.send_message(chat_id=update.effective_chat.id, text=text, reply_markup=main_kb)


def notify_assignees(context: CallbackContext):
    """ –°–ø–∞–º–∏–º –ø–æ —Ç–∞–π–º–µ—Ä—É"""
    context.bot.send_message(chat_id=context.job.context, text="–°–ø–∞–º")


def show_video(update: Update, context: CallbackContext):
    """ –í–∏–¥–µ–æ —Å —é—Ç—É–±–∞ """
    context.bot.send_message(chat_id=update.effective_chat.id, text=f'https://www.youtube.com/watch?v=1fPWr0d5zBE')


def about_leader(update: Update, context: CallbackContext):
    """ –û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ """
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text='–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ')


def about_us(update: Update, context: CallbackContext):
    """ –û –Ω–∞—Å """
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text='–û –Ω–∞—Å')


def order(update: Update, context: CallbackContext):
    """ –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É """
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text='–ß—Ç–æ –±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–≤–∫—É –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∏–º—è –≤ —á–∞—Ç')


def poll(update: Update, context: CallbackContext):
    """ –û–ø—Ä–æ—Å """
    user = update.message.from_user.username

    options_list = ['–í–∞—Ä–∏–∞–Ω—Ç 1', '–í–∞—Ä–∏–∞–Ω—Ç 2', '–í–∞—Ä–∏–∞–Ω—Ç 3']

    message = context.bot.send_poll(chat_id=update.effective_chat.id,
                                    question=f'–û–ø—Ä–æ—Å {update.message.text} —Å–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user}',
                                    options=options_list,
                                    is_anonymous=False,
                                    allows_multiple_answers=True)

    poll = {
        message.poll.id: {
            "admin_username": user,
            "message_id": message.message_id,
            "chat_id": update.effective_chat.id,
        }
    }
    context.bot_data.update(poll)


def inline_keys(update: Update, context: CallbackContext):
    """ –ü–µ—Ä—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤—ã–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
    context.bot.forward_message(chat_id=ORDERS_CHAT_ID,
                                from_chat_id=update.message.chat_id,
                                message_id=update.message.message_id)

    buttons_data = {'–ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª/—Å—Ç—Ä–∞–Ω–∏—Ü—É': 'subscriptions', '–°–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª—Å —Ç–µ–ª–µ–≥—Ä–∞–º–∞': 'message',
                    '–ó–∞—è–≤–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ': 'order', '–î—Ä—É–≥–æ–µ': 'other'}
    buttons = []
    for text, callback in buttons_data.items():
        buttons.append([InlineKeyboardButton(text=text, callback_data=callback)])

    keyboard = InlineKeyboardMarkup([button for button in buttons])
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text='–ö–∞–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –æ–∂–∏–¥–∞–µ—à—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏?',
                             reply_markup=keyboard)


""" –°—Ç–∞—Ä—Ç """
dispatcher.add_handler(CommandHandler('start', main_keyboard))

""" –§—É–Ω–∫—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã """
dispatcher.add_handler(MessageHandler(Filters.text('üî•–í–∏–¥–µ–æ'), show_video))
dispatcher.add_handler(MessageHandler(Filters.text('–û–ø—Ä–æ—Å'), poll))
dispatcher.add_handler(MessageHandler(Filters.text('–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'), order))
dispatcher.add_handler(MessageHandler(Filters.text('–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ'), about_leader))
dispatcher.add_handler(MessageHandler(Filters.text('–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã'), about_us))

""" –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –∏–º—è """
dispatcher.add_handler(
    MessageHandler(Filters.regex('^\+?(\+7|8|375)[-\(]?\d{3}\)?-?\d{3}-?\d{2}-?\d{2}\s[A-–Ø–Å][–∞-—è—ë]+$'), inline_keys))

if __name__ == '__main__':
    updater.start_polling()
